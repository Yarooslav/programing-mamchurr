Мамчур Ярослав група 121А
1.Зареєстрував приватний репозиторій на gitlab назвав programing-mamchurr.
2.Cклонував два репозиторія simple_projct i programing-mamchurr за допомогою команди git clone для подальшої роботи, ввів логін та пароль та успішно кланував репозиторій.
3.Скопіював файли командой ср для того щоб я міг виконати лабораторну роботу, для катологів командою ср -r .clang-format .clang-tidy .gitlab-ci.yml lab00/Doxyfile lab00/Makefile lab00/README.md lab00/katalog "src" lab00/katalog "test"у свій репозиторій, переіменовал lab00 B lab02 за допомогою команди mv /lab00/lab02. 
4.Зафіксував зміни за допомогою команди git commit -m "Initial copy of sample_project",для того щоб я розумів на якому я кроці.
5.Виконав зміни завдяки команди vim src/lib.h додав людину до списку.
case Human:
result="Human";
break;
та у файли lib.с
case Human:
result="Human";
break;
 Подивився на зміни за допомогою команди ./dist/main.bin. Помилок не має.
6.Відкрив в lldb файл main.bin .запинив на 40 строці, за допомогою команди b 40   перейшов на наступку строку за допомогою  команди n .b 43 строці подивився тварин за домогою команди p animals. перевірив 39-41 строку за домогою команди p *entity.
7.Щоб папка dist не зявлялась у gitlab создав файл gitignore та додав туди dist.Зафіксував зміни за допомогою команди git commit та завантажив зміни за допомогою команди git push.
8.Дослідив режим работи Debug ta Release.Relise- те же саме що Debug тільки без налагоджувальних файлів, ресурсів,та ін
ших функцій. ЗА рахунок чого працює швидше і збірка менше важить.
9. Висновок: Прокачав навики праци з гитом та терміналом .Загрузив проект на Gitlab.

K/п
1.debugging — методичний процес пошуку та зменшення числа помилок або дефектів у комп'ютерній програмі або електронному обладнанні з метою отримання очікуваної поведінки.
2.бінарний файл — в широкому сенсі: файл, що містить послідовність довільних байтів.
3.Nemiver,DDD,SDB,JSwat...
4.lldb використовується як відлагодник.
5.<ім"я змінної>:=<вираз>.
6.Breakpoint це до якої строки компілюється программа и далі ні іде .Поставити b і строку до якої.
7.В інформатиці, стек викликів це структура даних у вигляді стека, яка зберігає інформацію про активні підпрограми комп'ютерної програми.
8.Step in виконує наступний рядок коду. Якщо цим рядком є виклик функції ,то Крок із заходом відкриває функцію і виконання переноситьсяв початок функції.Step over виконує наступний рядок коду.Тільки якщо цим рядком є виклик функції,то Крок з обходом виконає весь код функції в одне натискання і поверне нам контроль після того , як функція буде виконана.Step out виконує наступний рядок коду.Вона виконує весь код функції,в якій ви зараз перебуваєте, і повертає контроль тільки після того, коли фнкція завершить своє виконання.

